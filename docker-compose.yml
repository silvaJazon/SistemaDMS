# Documentação: docker-compose.yml para o Projeto FluxoAI (Arquitetura Microsserviços)

services:
  # Serviço Mosquitto MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: fluxoai-mosquitto
    ports:
      - "1883:1883"
    volumes:
      # Monta o nosso ficheiro de configuração personalizado.
      # O Mosquitto irá ler este ficheiro em vez da configuração padrão.
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: unless-stopped
    networks:
      - fluxoai_net

  # Serviço de Captura de Vídeo
  servico_captura:
    build: ./servico_captura
    image: jazonbatista/fluxoai-servico-captura:latest # Usaremos esta tag por padrão agora
    container_name: fluxoai-servico_captura
    environment:
      - MQTT_BROKER_HOST=mosquitto
      - MQTT_BROKER_PORT=1883
      - VIDEO_SOURCE=${VIDEO_SOURCE:-0} # Padrão para câmara 0, pode ser sobreposto
      - LOG_LEVEL=${LOG_LEVEL:-INFO}   # Padrão INFO, pode ser sobreposto
      - FRAME_WIDTH=${FRAME_WIDTH:-640}
      - FRAME_HEIGHT=${FRAME_HEIGHT:-480}
      - PUBLISH_TOPIC=fluxoai/frames/raw
    depends_on:
      - mosquitto # Garante que o mosquitto inicia antes
    devices:
      - "/dev/video0:/dev/video0" # Mapeia a câmara USB
    restart: unless-stopped
    networks:
      - fluxoai_net

  # --- Serviços Futuros (Placeholders) ---
  # Adicionaremos aqui o servico_ia modificado, servico_analise e servico_web
  # servico_ia:
  #   build: ./servico_ia
  #   image: jazonbatista/fluxoai-servico-ia:latest
  #   container_name: fluxoai-servico_ia
  #   environment:
  #     - MQTT_BROKER_HOST=mosquitto
  #     - SUBSCRIBE_TOPIC=fluxoai/frames/raw
  #     - PUBLISH_TOPIC=fluxoai/frames/detected
  #     - LOG_LEVEL=${LOG_LEVEL:-INFO}
  #   depends_on:
  #     - mosquitto
  #   restart: unless-stopped
  #   networks:
  #     - fluxoai_net

networks:
  fluxoai_net:
    driver: bridge

